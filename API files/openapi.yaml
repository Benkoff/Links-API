openapi: 3.0.0
info:
  title: Links API
  description: API for links microservice data exchange
  version: 0.1.0
servers:
  - url: api.links.juja-platform.com.ua
    description: Optional address to specify the API server and base URL
paths:
  /v1/links:
    get:
      summary: Get all links
      description: Returns a list containing saved links. The list supports paging.
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
          description: Number of links returned
        - in: query
          name: pageNumber
          schema:
            type: integer
          description: Page number
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
              items:
                required:
                  - id
              properties:
                id:
                  type: string
                user:
                  type: string
                url:
                  type: string
                label:
                  type: string
                reference:
                  type: string
                active:
                  type: boolean
    post:
      summary: Save a link
      description: Adds a new link to the links list.
      parameters:
        - in: body
          name: url
          description: The url to save link.
          schema:
            required:
              - url
            properties:
              user:
                type: string
              url:
                type: string
              label:
                type: string
              reference:
                type: string
      responses:
        '201':
          description: Link succesfully saved.
        '400':
          description: Link hasn't been saved.
    put:
      summary: Update an existing link
      description: Link to be updated
      parameters:
        description: Id of the ink to be updated
        schema:
          required:
            - id
          properties:
            id:
              type: string
            user:
              type: string
            url:
              type: string
            label:
              type: string
            reference:
              type: string
      responses:
        '201':
          description: Link succesfully updated.
        '400':
          description: Invalid ID supplied.
        '404':
          description: Link not found.
  '/v1/links/{id}':
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: >-
          This resource represents an individual saved link. Each link is
          identified by a string 'id'
    get:
      summary: Gets a link by link`s id
      description: Returns a single link for its id
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                required:
                  - id
                properties:
                  id:
                    type: string
                  user:
                    type: string
                  url:
                    type: string
                  label:
                    type: string
                  reference:
                    type: string
                  active:
                    type: boolean
        '404':
          description: The Link does not exists.
  '/v1/links/user/{user}':
    get:
      summary: Gets all user`s links by user`s id
      description: Returns a list containing saved links. The list supports paging.
      parameters:
        - name: user
          in: path
          required: true
          description: The link's id
          type: string
        - name: pageSize
          in: query
          description: Number of links returned
          type: integer
        - name: pageNumber
          in: query
          description: Page number
          type: integer
      responses:
        '200':
          description: A list of links
          schema:
            required:
              - user
            type: array
            items:
              required:
                - id
              properties:
                id:
                  type: string
                user:
                  type: string
                url:
                  type: string
                label:
                  type: string
                reference:
                  type: string
                active:
                  type: boolean
        '404':
          description: The user has no links.
